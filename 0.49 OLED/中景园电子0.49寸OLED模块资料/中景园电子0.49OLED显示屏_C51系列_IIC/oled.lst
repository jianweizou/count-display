C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE SRC\oled.c BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND PRINT(.\oled.lst) TA
                    -BS(2) OBJECT(oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18                  
  19          //              ----------------------------------------------------------------
  20          // 修改历史   :
  21          // 日    期   : 
  22          // 作    者   : HuangKai
  23          // 修改内容   : 创建文件
  24          //版权所有，盗版必究。
  25          //Copyright(C) 中景园电子2014/3/16
  26          //All rights reserved
  27          //******************************************************************************/。
  28          #include "oled.h"
  29          //#include "stdlib.h"
  30          #include "oledfont.h"    
  31          //#include "delay.h"
  32          //OLED的显存
  33          //存放格式如下.
  34          //[0]0 1 2 3 ... 127  
  35          //[1]0 1 2 3 ... 127  
  36          //[2]0 1 2 3 ... 127  
  37          //[3]0 1 2 3 ... 127  
  38          //[4]0 1 2 3 ... 127  
  39          //[5]0 1 2 3 ... 127  
  40          //[6]0 1 2 3 ... 127  
  41          //[7]0 1 2 3 ... 127         
  42          void delay_ms(unsigned int ms)
  43          {                         
  44   1        unsigned int a;
  45   1        while(ms)
  46   1        {
  47   2          a=1800;
  48   2          while(a--);
  49   2          ms--;
  50   2        }
  51   1        return;
  52   1      }void IIC_Start()
  53          {
  54   1      
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 2   

  55   1        OLED_SCLK_Set() ;
  56   1        OLED_SDIN_Set();
  57   1        OLED_SDIN_Clr();
  58   1        OLED_SCLK_Clr();
  59   1      }
  60          
  61          /**********************************************
  62          //IIC Stop
  63          **********************************************/
  64          void IIC_Stop()
  65          {
  66   1      OLED_SCLK_Set() ;
  67   1      //  OLED_SCLK_Clr();
  68   1        OLED_SDIN_Clr();
  69   1        OLED_SDIN_Set();
  70   1        
  71   1      }
  72          
  73          void IIC_Wait_Ack()
  74          {
  75   1      
  76   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  77   1        //GPIOB->CRH |= 0x00080000;
  78   1      //  OLED_SDA = 1;
  79   1      //  delay_us(1);
  80   1        //OLED_SCL = 1;
  81   1        //delay_us(50000);
  82   1      /*  while(1)
  83   1        {
  84   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  85   1          {
  86   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  87   1            //GPIOB->CRH |= 0x00030000;
  88   1            return;
  89   1          }
  90   1        }
  91   1      */
  92   1        OLED_SCLK_Set() ;
  93   1        OLED_SCLK_Clr();
  94   1      }
  95          /**********************************************
  96          // IIC Write byte
  97          **********************************************/
  98          
  99          void Write_IIC_Byte(unsigned char IIC_Byte)
 100          {
 101   1        unsigned char i;
 102   1        unsigned char m,da;
 103   1        da=IIC_Byte;
 104   1        OLED_SCLK_Clr();
 105   1        for(i=0;i<8;i++)    
 106   1        {
 107   2            m=da;
 108   2          //  OLED_SCLK_Clr();
 109   2          m=m&0x80;
 110   2          if(m==0x80)
 111   2          {OLED_SDIN_Set();}
 112   2          else OLED_SDIN_Clr();
 113   2            da=da<<1;
 114   2          OLED_SCLK_Set();
 115   2          OLED_SCLK_Clr();
 116   2          }
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 3   

 117   1      
 118   1      
 119   1      }
 120          /**********************************************
 121          // IIC Write Command
 122          **********************************************/
 123          void Write_IIC_Command(unsigned char IIC_Command)
 124          {
 125   1         IIC_Start();
 126   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 127   1        IIC_Wait_Ack(); 
 128   1         Write_IIC_Byte(0x00);      //write command
 129   1        IIC_Wait_Ack(); 
 130   1         Write_IIC_Byte(IIC_Command); 
 131   1        IIC_Wait_Ack(); 
 132   1         IIC_Stop();
 133   1      }
 134          /**********************************************
 135          // IIC Write Data
 136          **********************************************/
 137          void Write_IIC_Data(unsigned char IIC_Data)
 138          {
 139   1         IIC_Start();
 140   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 141   1        IIC_Wait_Ack(); 
 142   1         Write_IIC_Byte(0x40);      //write data
 143   1        IIC_Wait_Ack(); 
 144   1         Write_IIC_Byte(IIC_Data);
 145   1        IIC_Wait_Ack(); 
 146   1         IIC_Stop();
 147   1      }
 148          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 149          {
 150   1        if(cmd)
 151   1            {
 152   2      
 153   2         Write_IIC_Data(dat);
 154   2         
 155   2          }
 156   1        else {
 157   2         Write_IIC_Command(dat);
 158   2          
 159   2        }
 160   1      
 161   1      
 162   1      }
 163          
 164          /********************************************
 165          // fill_Picture
 166          ********************************************/
 167          void fill_picture(unsigned char fill_Data)
 168          {
 169   1        unsigned char m,n;
 170   1        for(m=0;m<8;m++)
 171   1        {
 172   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 173   2          OLED_WR_Byte(0x00,0);   //low column start address
 174   2          OLED_WR_Byte(0x10,0);   //high column start address
 175   2          for(n=0;n<128;n++)
 176   2            {
 177   3              OLED_WR_Byte(fill_Data,1);
 178   3            }
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 4   

 179   2        }
 180   1      }
 181          
 182          
 183          /***********************Delay****************************************/
 184          void Delay_50ms(unsigned int Del_50ms)
 185          {
 186   1        unsigned int m;
 187   1        for(;Del_50ms>0;Del_50ms--)
 188   1          for(m=6245;m>0;m--);
 189   1      }
 190          
 191          void Delay_1ms(unsigned int Del_1ms)
 192          {
 193   1        unsigned char j;
 194   1        while(Del_1ms--)
 195   1        { 
 196   2          for(j=0;j<123;j++);
 197   2        }
 198   1      }
 199          
 200          //坐标设置
 201          
 202            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 203          { unsigned char x0;
 204   1        x0=x+32;
 205   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 206   1        OLED_WR_Byte(((x0&0xf0)>>4)|0x10,OLED_CMD);
 207   1        OLED_WR_Byte((x0&0x0f),OLED_CMD); 
 208   1      }       
 209          //开启OLED显示    
 210          void OLED_Display_On(void)
 211          {
 212   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 213   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 214   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 215   1      }
 216          //关闭OLED显示     
 217          void OLED_Display_Off(void)
 218          {
 219   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 220   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 221   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 222   1      }            
 223          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 224          void OLED_Clear(void)  
 225          {  
 226   1        u8 i,n;       
 227   1        for(i=0;i<4;i++)  
 228   1        {  
 229   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 230   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 231   2          OLED_WR_Byte (0x12,OLED_CMD);      //设置显示位置―列高地址   
 232   2          for(n=32;n<96;n++)OLED_WR_Byte(0,OLED_DATA); 
 233   2        } //更新显示
 234   1      }
 235          void OLED_On(void)  
 236          {  
 237   1        u8 i,n;       
 238   1        for(i=0;i<1;i++)  
 239   1        {  
 240   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 5   

 241   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 242   2          OLED_WR_Byte (0x12,OLED_CMD);      //设置显示位置―列高地址   
 243   2          for(n=32;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 244   2        } //更新显示
 245   1      }
 246          //在指定位置显示一个字符,包括部分字符
 247          //x:0~127
 248          //y:0~63
 249          //mode:0,反白显示;1,正常显示         
 250          //size:选择字体 16/12 
 251          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 252          {       
 253   1        unsigned char c=0,i=0;  
 254   1          c=chr-' ';//得到偏移后的值      
 255   1          if(x>Max_Column-1){x=0;y=y+2;}
 256   1          if(Char_Size ==16)
 257   1            {
 258   2            OLED_Set_Pos(x,y);  
 259   2            for(i=0;i<8;i++)
 260   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 261   2            OLED_Set_Pos(x,y+1);
 262   2            for(i=0;i<8;i++)
 263   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 264   2            }
 265   1            else {  
 266   2              OLED_Set_Pos(x,y);
 267   2              for(i=0;i<6;i++)
 268   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 269   2              
 270   2            }
 271   1      }
 272          //m^n函数
 273          u32 oled_pow(u8 m,u8 n)
 274          {
 275   1        u32 result=1;  
 276   1        while(n--)result*=m;    
 277   1        return result;
 278   1      }         
 279          //显示2个数字
 280          //x,y :起点坐标  
 281          //len :数字的位数
 282          //size:字体大小
 283          //mode:模式 0,填充模式;1,叠加模式
 284          //num:数值(0~4294967295);       
 285          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 286          {           
 287   1        u8 t,temp;
 288   1        u8 enshow=0;               
 289   1        for(t=0;t<len;t++)
 290   1        {
 291   2          temp=(num/oled_pow(10,len-t-1))%10;
 292   2          if(enshow==0&&t<(len-1))
 293   2          {
 294   3            if(temp==0)
 295   3            {
 296   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 297   4              continue;
 298   4            }else enshow=1; 
 299   3             
 300   3          }
 301   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 302   2        }
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 6   

 303   1      } 
 304          //显示一个字符号串
 305          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 306          {
 307   1        unsigned char j=0;
 308   1        while (chr[j]!='\0')
 309   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 310   2            x+=8;
 311   2          if(x>120){x=0;y+=2;}
 312   2            j++;
 313   2        }
 314   1      }
 315          //显示汉字
 316          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 317          {               
 318   1        u8 t,adder=0;
 319   1        OLED_Set_Pos(x,y);  
 320   1          for(t=0;t<16;t++)
 321   1          {
 322   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 323   2              adder+=1;
 324   2           }  
 325   1          OLED_Set_Pos(x,y+1);  
 326   1          for(t=0;t<16;t++)
 327   1            { 
 328   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 329   2              adder+=1;
 330   2            }         
 331   1      }
 332          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 333          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 334          {   
 335   1       unsigned int j=0;
 336   1       unsigned char x,y;
 337   1        
 338   1        if(y1%8==0) y=y1/8;      
 339   1        else y=y1/8+1;
 340   1        for(y=y0;y<y1;y++)
 341   1        {
 342   2          OLED_Set_Pos(x0,y);
 343   2          for(x=x0;x<x1;x++)
 344   2            {      
 345   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 346   3            }
 347   2        }
 348   1      } 
 349          
 350          //初始化SSD1306             
 351          void OLED_Init(void)
 352          {   
 353   1       
 354   1        delay_ms(100);
 355   1      
 356   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 357   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 358   1        OLED_WR_Byte(0x12,OLED_CMD);//---set high column address
 359   1        OLED_WR_Byte(0x00,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 360   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 361   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 362   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
C51 COMPILER V9.52.0.0   OLED                                                              07/12/2015 09:58:00 PAGE 7   

 363   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 364   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 365   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 366   1        OLED_WR_Byte(0x1F,OLED_CMD);//--1/32 duty
 367   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 368   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 369   1        OLED_WR_Byte(0x00,OLED_CMD);//
 370   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 371   1        OLED_WR_Byte(0x80,OLED_CMD);//
 372   1        OLED_WR_Byte(0xD9,OLED_CMD);//set pre-charge period
 373   1        OLED_WR_Byte(0x1F,OLED_CMD);//
 374   1        OLED_WR_Byte(0xDA,OLED_CMD);//set COM pins
 375   1        OLED_WR_Byte(0x12,OLED_CMD);//
 376   1        OLED_WR_Byte(0xDB,OLED_CMD);//set vcomh
 377   1        OLED_WR_Byte(0x40,OLED_CMD);//
 378   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 379   1        OLED_WR_Byte(0x14,OLED_CMD);//
 380   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 381   1      }  
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1264    ----
   CONSTANT SIZE    =   2648    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
